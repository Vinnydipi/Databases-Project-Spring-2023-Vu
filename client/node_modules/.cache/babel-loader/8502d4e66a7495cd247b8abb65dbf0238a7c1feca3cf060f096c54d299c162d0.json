{"ast":null,"code":"import Axios from 'axios';\n\n// Used to Check the Login info and if correct then redirects \n// to the Event page to show the events \nexport const handleLogin = (username, password, setLoginStatus, setIsLoggedIn, navigate) => {\n  Axios.post('http://localhost:3001/login', {\n    username: username,\n    password: password\n  }).then(response => {\n    if (response.data.message) {\n      setLoginStatus(response.data.message);\n    } else {\n      const user = response.data;\n      setLoginStatus(user.username);\n      setIsLoggedIn(true);\n\n      // Store the current user's username in session storage\n      // to access in other files\n      sessionStorage.setItem('curUser', user.username);\n      sessionStorage.setItem('userEmail', user.email);\n      sessionStorage.setItem('id', user.idNum);\n      sessionStorage.setItem('userType', user.userType);\n      // Getting the universityID\n      const domain = user.email.split('@')[1];\n      sessionStorage.setItem('universityId', getUniversityId(domain));\n      navigate('/mainPage');\n      refresh();\n    }\n  });\n};\n\n// Function to grab the email domain and set to the according number\nexport const getUniversityId = domain => {\n  if (domain === 'knights.ucf.edu') return 1;else if (domain === 'ufl.edu') return 2;else return 3;\n};\n\n// Refreshing the page\nexport const refresh = () => window.location.reload(true);","map":{"version":3,"names":["Axios","handleLogin","username","password","setLoginStatus","setIsLoggedIn","navigate","post","then","response","data","message","user","sessionStorage","setItem","email","idNum","userType","domain","split","getUniversityId","refresh","window","location","reload"],"sources":["C:/Users/vince/OneDrive/Desktop/project/client/src/pages/auth/login/loginFunc.js"],"sourcesContent":["import Axios from 'axios';\r\n\r\n// Used to Check the Login info and if correct then redirects \r\n// to the Event page to show the events \r\nexport const handleLogin = (username, password, setLoginStatus, setIsLoggedIn, navigate) => \r\n    {\r\n        Axios.post('http://localhost:3001/login', {\r\n        username: username,\r\n        password: password,\r\n        }).then((response) => \r\n        {\r\n          if (response.data.message)\r\n          {\r\n            setLoginStatus(response.data.message);\r\n          }\r\n          else\r\n          {\r\n            const user = response.data;\r\n            setLoginStatus(user.username);\r\n            setIsLoggedIn(true);\r\n\r\n            // Store the current user's username in session storage\r\n            // to access in other files\r\n            sessionStorage.setItem('curUser', user.username);\r\n            sessionStorage.setItem('userEmail', user.email);\r\n            sessionStorage.setItem('id', user.idNum);\r\n            sessionStorage.setItem('userType', user.userType);\r\n            // Getting the universityID\r\n            const domain = user.email.split('@')[1];\r\n            sessionStorage.setItem('universityId', getUniversityId(domain));\r\n\r\n            navigate('/mainPage');\r\n            refresh();\r\n          }\r\n        });\r\n    };\r\n\r\n// Function to grab the email domain and set to the according number\r\nexport const getUniversityId = (domain) =>\r\n{\r\n    if (domain === 'knights.ucf.edu')\r\n        return 1;\r\n    else if (domain === 'ufl.edu')\r\n        return 2;\r\n    else\r\n        return 3;\r\n}\r\n\r\n// Refreshing the page\r\nexport const refresh = () => window.location.reload(true);"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;;AAEzB;AACA;AACA,OAAO,MAAMC,WAAW,GAAGA,CAACC,QAAQ,EAAEC,QAAQ,EAAEC,cAAc,EAAEC,aAAa,EAAEC,QAAQ,KACnF;EACIN,KAAK,CAACO,IAAI,CAAC,6BAA6B,EAAE;IAC1CL,QAAQ,EAAEA,QAAQ;IAClBC,QAAQ,EAAEA;EACV,CAAC,CAAC,CAACK,IAAI,CAAEC,QAAQ,IACjB;IACE,IAAIA,QAAQ,CAACC,IAAI,CAACC,OAAO,EACzB;MACEP,cAAc,CAACK,QAAQ,CAACC,IAAI,CAACC,OAAO,CAAC;IACvC,CAAC,MAED;MACE,MAAMC,IAAI,GAAGH,QAAQ,CAACC,IAAI;MAC1BN,cAAc,CAACQ,IAAI,CAACV,QAAQ,CAAC;MAC7BG,aAAa,CAAC,IAAI,CAAC;;MAEnB;MACA;MACAQ,cAAc,CAACC,OAAO,CAAC,SAAS,EAAEF,IAAI,CAACV,QAAQ,CAAC;MAChDW,cAAc,CAACC,OAAO,CAAC,WAAW,EAAEF,IAAI,CAACG,KAAK,CAAC;MAC/CF,cAAc,CAACC,OAAO,CAAC,IAAI,EAAEF,IAAI,CAACI,KAAK,CAAC;MACxCH,cAAc,CAACC,OAAO,CAAC,UAAU,EAAEF,IAAI,CAACK,QAAQ,CAAC;MACjD;MACA,MAAMC,MAAM,GAAGN,IAAI,CAACG,KAAK,CAACI,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;MACvCN,cAAc,CAACC,OAAO,CAAC,cAAc,EAAEM,eAAe,CAACF,MAAM,CAAC,CAAC;MAE/DZ,QAAQ,CAAC,WAAW,CAAC;MACrBe,OAAO,EAAE;IACX;EACF,CAAC,CAAC;AACN,CAAC;;AAEL;AACA,OAAO,MAAMD,eAAe,GAAIF,MAAM,IACtC;EACI,IAAIA,MAAM,KAAK,iBAAiB,EAC5B,OAAO,CAAC,CAAC,KACR,IAAIA,MAAM,KAAK,SAAS,EACzB,OAAO,CAAC,CAAC,KAET,OAAO,CAAC;AAChB,CAAC;;AAED;AACA,OAAO,MAAMG,OAAO,GAAGA,CAAA,KAAMC,MAAM,CAACC,QAAQ,CAACC,MAAM,CAAC,IAAI,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}