{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\vince\\\\OneDrive\\\\Desktop\\\\project\\\\client\\\\src\\\\pages\\\\auth\\\\login\\\\login.js\",\n  _s = $RefreshSig$();\n/* eslint-disable no-unused-vars */\nimport React, { useState, useEffect } from 'react';\nimport Axios from 'axios';\nimport { useNavigate } from 'react-router-dom';\n\n// Import CSS\nimport '../authPageStyle.css';\n// Import Function\nimport { loginFunc, getUniversityId, refresh } from './loginFunc';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Login() {\n  _s();\n  // To navigate to the register page\n  const navigate = useNavigate();\n\n  // Info used in the authenticating of Login Attempt\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  // Checking if the account is logged in\n  const [loginStatus, setLoginStatus] = useState('');\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n\n  // COOKIES\n  // Something to do with cookies\n  Axios.defaults.withCredentials = true;\n  useEffect(() => {\n    Axios.get('http://localhost:3001/login').then(response => {\n      if (response.data.loggedIn === true) {\n        setLoginStatus(response.data.user[0].username);\n        console.log(`User ${response.data.user[0].username} is logged in as ${response.data.user[0].userType}.`);\n        setIsLoggedIn(true);\n      }\n    });\n  }, []);\n\n  // Used to Check the Login info and if correct then redirects \n  // to the Event page to show the events \n  const handleLogin = () => {\n    loginFunc(username, password).then(response => {\n      if (response.data.message) {\n        setLoginStatus(response.data.message);\n      } else {\n        const user = response.data;\n        setLoginStatus(user.username);\n        setIsLoggedIn(true);\n\n        // Store the current user's username in session storage\n        // to access in other files\n        sessionStorage.setItem('curUser', user.username);\n        sessionStorage.setItem('userEmail', user.email);\n        sessionStorage.setItem('id', user.idNum);\n        sessionStorage.setItem('userType', user.userType);\n        // Getting the universityID\n        const domain = user.email.split('@')[1];\n        sessionStorage.setItem('universityId', getUniversityId(domain));\n        navigate('/mainPage');\n        refresh();\n      }\n    });\n  };\n\n  // HTML FOR THE FILE\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"navButtons\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => navigate('/registerStudent'),\n        children: \"Register Student Account\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => navigate('/registerSuperAdmin'),\n        children: \"Register Superadmin Account\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"LOGIN\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"formGroup\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Username:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          onChange: e => setUsername(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"formGroup\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Password:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          onChange: e => setPassword(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"buttons\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleLogin,\n          children: \"Login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 11\n      }, this), isLoggedIn && 'User Logged in Rerouting']\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 75,\n    columnNumber: 7\n  }, this);\n}\n_s(Login, \"rHKJDZNdhUqLJrorDh0u2OLLTs8=\", false, function () {\n  return [useNavigate];\n});\n_c = Login;\nexport default Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","useState","useEffect","Axios","useNavigate","loginFunc","getUniversityId","refresh","jsxDEV","_jsxDEV","Login","_s","navigate","username","setUsername","password","setPassword","loginStatus","setLoginStatus","isLoggedIn","setIsLoggedIn","defaults","withCredentials","get","then","response","data","loggedIn","user","console","log","userType","handleLogin","message","sessionStorage","setItem","email","idNum","domain","split","className","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","type","onChange","e","target","value","_c","$RefreshReg$"],"sources":["C:/Users/vince/OneDrive/Desktop/project/client/src/pages/auth/login/login.js"],"sourcesContent":["/* eslint-disable no-unused-vars */\r\nimport React, { useState, useEffect } from 'react';\r\nimport Axios from 'axios';\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\n// Import CSS\r\nimport '../authPageStyle.css';\r\n// Import Function\r\nimport { loginFunc, getUniversityId, refresh } from './loginFunc';\r\n\r\nfunction Login()\r\n{\r\n    // To navigate to the register page\r\n    const navigate = useNavigate();\r\n    \r\n    // Info used in the authenticating of Login Attempt\r\n    const [username, setUsername] = useState('');\r\n    const [password, setPassword] = useState('');\r\n    // Checking if the account is logged in\r\n    const [loginStatus, setLoginStatus] = useState('');\r\n    const [isLoggedIn, setIsLoggedIn] = useState(false);\r\n\r\n    // COOKIES\r\n    // Something to do with cookies\r\n    Axios.defaults.withCredentials = true;\r\n\r\n    useEffect(() => \r\n    {\r\n      Axios.get('http://localhost:3001/login').then((response) => \r\n      {\r\n        if (response.data.loggedIn === true)\r\n        {\r\n          setLoginStatus(response.data.user[0].username)\r\n          console.log(`User ${response.data.user[0].username} is logged in as ${response.data.user[0].userType}.`);\r\n          setIsLoggedIn(true);\r\n        }\r\n      });\r\n    }, []);\r\n\r\n    // Used to Check the Login info and if correct then redirects \r\n    // to the Event page to show the events \r\n    const handleLogin = () => \r\n    {\r\n        loginFunc(username, password)\r\n        .then((response) => \r\n        {\r\n          if (response.data.message)\r\n          {\r\n            setLoginStatus(response.data.message);\r\n          }\r\n          else\r\n          {\r\n            const user = response.data;\r\n            setLoginStatus(user.username);\r\n            setIsLoggedIn(true);\r\n\r\n            // Store the current user's username in session storage\r\n            // to access in other files\r\n            sessionStorage.setItem('curUser', user.username);\r\n            sessionStorage.setItem('userEmail', user.email);\r\n            sessionStorage.setItem('id', user.idNum);\r\n            sessionStorage.setItem('userType', user.userType);\r\n            // Getting the universityID\r\n            const domain = user.email.split('@')[1];\r\n            sessionStorage.setItem('universityId', getUniversityId(domain));\r\n\r\n            navigate('/mainPage');\r\n            refresh();\r\n          }\r\n        });\r\n    };\r\n\r\n    // HTML FOR THE FILE\r\n    return (\r\n      <div className='container'>\r\n        <div className='navButtons'>\r\n          <button onClick={() => navigate('/registerStudent')}>Register Student Account</button>\r\n          <button onClick={() => navigate('/registerSuperAdmin')}>Register Superadmin Account</button>\r\n        </div>\r\n        <div className='form'>\r\n          <h2>LOGIN</h2>\r\n          <div className='formGroup'>\r\n            <label>Username:</label>\r\n            <input type='text' onChange={(e) => setUsername(e.target.value)}></input>\r\n          </div>\r\n          <div className='formGroup'>\r\n            <label>Password:</label>\r\n            <input type='password' onChange={(e) => setPassword(e.target.value)}></input>\r\n          </div>\r\n          <div className='buttons'>\r\n            <button onClick={handleLogin}>Login</button>\r\n          </div>\r\n          {isLoggedIn && 'User Logged in Rerouting'}\r\n        </div>\r\n      </div>\r\n    );\r\n}\r\n\r\nexport default Login;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}