{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\vince\\\\OneDrive\\\\Desktop\\\\project\\\\client\\\\src\\\\pages\\\\login\\\\login.js\",\n  _s = $RefreshSig$();\n/* eslint-disable no-unused-vars */\nimport React, { useState, useEffect } from 'react';\nimport Axios from 'axios';\nimport { useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Login() {\n  _s();\n  // To navigate to the register page\n  const navigate = useNavigate();\n\n  // Info used in the authenticating of Login Attempt\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  // Checking if the account is logged in\n  const [loginStatus, setLoginStatus] = useState('');\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n\n  // COOKIES\n  // Something to do with cookies\n  Axios.defaults.withCredentials = true;\n  useEffect(() => {\n    Axios.get('http://localhost:3001/login').then(response => {\n      if (response.data.loggedIn === true) {\n        setLoginStatus(response.data.user[0].username);\n        console.log(`User ${response.data.user[0].username} is logged in as ${response.data.user[0].userType}.`);\n        setIsLoggedIn(true);\n      }\n    });\n  }, []);\n\n  // Used to Check the Login info and if correct then redirects \n  // to the Event page to show the events \n  const login = () => {\n    Axios.post('http://localhost:3001/login', {\n      username: username,\n      password: password\n    }).then(response => {\n      if (response.data.message) {\n        setLoginStatus(response.data.message);\n      } else {\n        const user = response.data[0];\n        setLoginStatus(user.username);\n        setIsLoggedIn(true);\n\n        // Now check the userType and redirect accordingly\n        if (user.userType === 'student') {\n          navigate('/student/home');\n        } else if (user.userType === 'superadmin') {\n          navigate('/superAdminHome');\n        } else navigate('/events');\n        // Refresh the page to load new page\n        refresh();\n      }\n    });\n  };\n\n  // Refreshing the page\n  const refresh = () => window.location.reload(true);\n\n  // HTML FOR THE FILE\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"login\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"LOGIN\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Username:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        onChange: e => {\n          setUsername(e.target.value);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Password:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        onChange: e => {\n          setPassword(e.target.value);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => navigate('/registerStudent'),\n        children: \"Register Student Account\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => navigate('/registerSuperAdmin'),\n        children: \"Register Superadmin Account\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: login,\n      children: \"Login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 11\n    }, this), isLoggedIn && 'User Logged in Rerouting']\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 76,\n    columnNumber: 9\n  }, this);\n}\n_s(Login, \"rHKJDZNdhUqLJrorDh0u2OLLTs8=\", false, function () {\n  return [useNavigate];\n});\n_c = Login;\nexport default Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","useState","useEffect","Axios","useNavigate","jsxDEV","_jsxDEV","Login","_s","navigate","username","setUsername","password","setPassword","loginStatus","setLoginStatus","isLoggedIn","setIsLoggedIn","defaults","withCredentials","get","then","response","data","loggedIn","user","console","log","userType","login","post","message","refresh","window","location","reload","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","onChange","e","target","value","onClick","_c","$RefreshReg$"],"sources":["C:/Users/vince/OneDrive/Desktop/project/client/src/pages/login/login.js"],"sourcesContent":["/* eslint-disable no-unused-vars */\r\nimport React, { useState, useEffect } from 'react';\r\nimport Axios from 'axios';\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\nfunction Login()\r\n{\r\n    // To navigate to the register page\r\n    const navigate = useNavigate();\r\n    \r\n    // Info used in the authenticating of Login Attempt\r\n    const [username, setUsername] = useState('');\r\n    const [password, setPassword] = useState('');\r\n    // Checking if the account is logged in\r\n    const [loginStatus, setLoginStatus] = useState('');\r\n    const [isLoggedIn, setIsLoggedIn] = useState(false);\r\n\r\n    // COOKIES\r\n    // Something to do with cookies\r\n    Axios.defaults.withCredentials = true;\r\n\r\n    useEffect(() => \r\n    {\r\n      Axios.get('http://localhost:3001/login').then((response) => \r\n      {\r\n        if (response.data.loggedIn === true)\r\n        {\r\n          setLoginStatus(response.data.user[0].username)\r\n          console.log(`User ${response.data.user[0].username} is logged in as ${response.data.user[0].userType}.`);\r\n          setIsLoggedIn(true);\r\n        }\r\n      });\r\n    }, []);\r\n\r\n    // Used to Check the Login info and if correct then redirects \r\n    // to the Event page to show the events \r\n    const login = () => \r\n    {\r\n      Axios.post('http://localhost:3001/login', {\r\n        username: username,\r\n        password: password,\r\n        }).then((response) => \r\n        {\r\n          if (response.data.message)\r\n          {\r\n            setLoginStatus(response.data.message);\r\n          }\r\n          else\r\n          {\r\n            const user = response.data[0];\r\n            setLoginStatus(user.username);\r\n            setIsLoggedIn(true);\r\n\r\n            // Now check the userType and redirect accordingly\r\n            if (user.userType === 'student')\r\n            {\r\n              navigate('/student/home');\r\n            }\r\n            else if (user.userType === 'superadmin')\r\n            {\r\n              navigate('/superAdminHome');\r\n            }\r\n            else \r\n              navigate('/events');\r\n            // Refresh the page to load new page\r\n            refresh();\r\n          }\r\n        });\r\n    };\r\n\r\n    // Refreshing the page\r\n    const refresh = () => window.location.reload(true);\r\n\r\n    // HTML FOR THE FILE\r\n    return (\r\n        <div className='login'>\r\n          <h2>LOGIN</h2>\r\n          <div>\r\n            <label>Username:</label>\r\n            <input type=\"text\"\r\n            onChange={(e) => \r\n            {\r\n              setUsername(e.target.value);\r\n            }}></input>\r\n          </div>\r\n          <div>\r\n            <label>Password:</label>\r\n            <input type=\"text\"\r\n            onChange={(e) => \r\n            {\r\n              setPassword(e.target.value);\r\n            }}></input>\r\n          </div>\r\n          <div>\r\n            <button onClick={()=>navigate('/registerStudent')}>Register Student Account</button>\r\n            <button onClick={()=>navigate('/registerSuperAdmin')}>Register Superadmin Account</button>\r\n          </div>\r\n          <button onClick={ login }>Login</button>\r\n          { isLoggedIn && 'User Logged in Rerouting'}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Login;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}