{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\vince\\\\OneDrive\\\\Desktop\\\\project\\\\client\\\\src\\\\pages\\\\accountType\\\\studentPages\\\\pages\\\\components\\\\editReviews.js\",\n  _s = $RefreshSig$();\n/* eslint-disable no-unused-vars */\nimport React, { Fragment, useEffect, useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport Axios from 'axios';\n\n// Importing styling\nimport '../../style/editReview.css';\n\n// Import utils\nimport ReadOnlyRow from '../utils/readOnlyRow';\nimport EditTableRow from '../utils/editTableRows';\n\n// Logout feature\nimport { logout } from '../../../../components/logout';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction EditReviews() {\n  _s();\n  // Used to navigate around the web app\n  const navigate = useNavigate();\n\n  // Holds the users current reviews for all events\n  const [reviews, setReviews] = useState([]);\n\n  // Holds the updated rate/review\n  const [newData, setNewData] = useState({\n    commentId: '',\n    rate: '',\n    review: ''\n  });\n  const [editId, setEditId] = useState(null);\n\n  // Getting the userId so we can retrieve the correct events\n  const userId = sessionStorage.getItem('id');\n\n  // Getting the information from the backend for all reviews\n  // that belong to the eventId we are reviewing\n  useEffect(() => {\n    Axios.get(`http://localhost:3001/studentHome/editReviews?userId=${userId}`).then(response => {\n      setReviews(response.data);\n    }).catch(error => {\n      console.log(error);\n    });\n  }, [userId]);\n\n  // Function to send which eventId we are updating along with\n  // the info to have updated \n  const handleEditReview = (event, review) => {\n    event.preventDefault();\n    setEditId(review.commentId);\n  };\n  const handleDataChange = event => {\n    event.preventDefault();\n  };\n  const handleDeleteReview = () => {\n    Axios.post('http://localhost:3001/studentHome/editReview', {});\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"mainContainer\",\n    children: [\"STUDENT EVENT REVIEW PAGE\", /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"navButtons\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: logout,\n        children: \"Logout\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => navigate('/studentHome'),\n        children: \"Student Home\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"tableWrapper\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"table\", {\n          className: \"contentTable\",\n          children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n            children: /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Rating\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 86,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Review\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 87,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Actions\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 88,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 85,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n            children: reviews.map(review => /*#__PURE__*/_jsxDEV(Fragment, {\n              children: editId === review.commentId ? /*#__PURE__*/_jsxDEV(EditTableRow, {\n                review: review\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 95,\n                columnNumber: 45\n              }, this) : /*#__PURE__*/_jsxDEV(ReadOnlyRow, {\n                review: review,\n                handleEditReview: handleEditReview\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 96,\n                columnNumber: 45\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 93,\n              columnNumber: 37\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 75,\n    columnNumber: 9\n  }, this);\n}\n_s(EditReviews, \"3qfYe5u6tQRG6t4xkY/OX7cUFrQ=\", false, function () {\n  return [useNavigate];\n});\n_c = EditReviews;\nexport default EditReviews;\nvar _c;\n$RefreshReg$(_c, \"EditReviews\");","map":{"version":3,"names":["React","Fragment","useEffect","useState","useNavigate","Axios","ReadOnlyRow","EditTableRow","logout","jsxDEV","_jsxDEV","EditReviews","_s","navigate","reviews","setReviews","newData","setNewData","commentId","rate","review","editId","setEditId","userId","sessionStorage","getItem","get","then","response","data","catch","error","console","log","handleEditReview","event","preventDefault","handleDataChange","handleDeleteReview","post","className","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","map","_c","$RefreshReg$"],"sources":["C:/Users/vince/OneDrive/Desktop/project/client/src/pages/accountType/studentPages/pages/components/editReviews.js"],"sourcesContent":["/* eslint-disable no-unused-vars */\r\nimport React, { Fragment, useEffect, useState } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport Axios from 'axios';\r\n\r\n// Importing styling\r\nimport '../../style/editReview.css';\r\n\r\n// Import utils\r\nimport ReadOnlyRow from '../utils/readOnlyRow'\r\nimport EditTableRow from '../utils/editTableRows';\r\n\r\n// Logout feature\r\nimport { logout } from '../../../../components/logout';\r\n\r\nfunction EditReviews()\r\n{\r\n    // Used to navigate around the web app\r\n    const navigate = useNavigate();\r\n\r\n    // Holds the users current reviews for all events\r\n    const [reviews, setReviews] = useState([]);\r\n\r\n    // Holds the updated rate/review\r\n    const [newData, setNewData] = useState({\r\n        commentId: '',\r\n        rate: '',\r\n        review: '',\r\n    });\r\n\r\n    const [editId, setEditId] = useState(null);\r\n\r\n    // Getting the userId so we can retrieve the correct events\r\n    const userId = sessionStorage.getItem('id');\r\n\r\n    // Getting the information from the backend for all reviews\r\n    // that belong to the eventId we are reviewing\r\n    useEffect(() => \r\n    {\r\n        Axios.get(`http://localhost:3001/studentHome/editReviews?userId=${userId}`)\r\n            .then((response) =>\r\n            {\r\n                setReviews(response.data);\r\n            })\r\n            .catch((error) =>\r\n            {\r\n                console.log(error);\r\n            });\r\n    }, [userId]);\r\n\r\n    // Function to send which eventId we are updating along with\r\n    // the info to have updated \r\n    const handleEditReview = (event, review) =>\r\n    {\r\n        event.preventDefault();\r\n        setEditId(review.commentId);\r\n    }\r\n\r\n    const handleDataChange = (event) =>\r\n    {\r\n        event.preventDefault();\r\n\r\n        \r\n    }\r\n\r\n    const handleDeleteReview = () =>\r\n    {\r\n        Axios.post('http://localhost:3001/studentHome/editReview',\r\n        {\r\n\r\n        })\r\n    }\r\n\r\n    return (\r\n        <div className='mainContainer'>\r\n            STUDENT EVENT REVIEW PAGE\r\n            <div className='navButtons'>\r\n                <button onClick={logout}>Logout</button>\r\n                <button onClick={() => navigate('/studentHome')}>Student Home</button>\r\n            </div>\r\n            <div className='tableWrapper'>\r\n                <div>\r\n                        <table className='contentTable'>\r\n                            <thead>\r\n                                <tr>\r\n                                    <th>Rating</th>\r\n                                    <th>Review</th>\r\n                                    <th>Actions</th>\r\n                                </tr>\r\n                            </thead>\r\n                            <tbody>\r\n                                {reviews.map((review) => (\r\n                                    <Fragment>\r\n                                        { editId === review.commentId \r\n                                          ? <EditTableRow review={ review }/> \r\n                                          : <ReadOnlyRow \r\n                                                review={ review }\r\n                                                handleEditReview={ handleEditReview }\r\n                                            /> \r\n                                        }\r\n                                    </Fragment>\r\n                                ))}\r\n                            </tbody>\r\n                        </table>\r\n                </div>\r\n            </div>\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nexport default EditReviews;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}