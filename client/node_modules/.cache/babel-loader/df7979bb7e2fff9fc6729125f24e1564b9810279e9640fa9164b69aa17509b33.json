{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\vince\\\\OneDrive\\\\Desktop\\\\project\\\\client\\\\src\\\\editReviewButton\\\\editReviews.jsx\",\n  _s = $RefreshSig$();\n/* eslint-disable no-unused-vars */\nimport React, { Fragment, useEffect, useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport Axios from 'axios';\n\n// Import styles\nimport './editReview.css';\n\n// Import components\nimport ReadOnlyRow from './components/readOnlyRow';\nimport EditTableRow from './components/editTableRows';\n\n// Logout feature\nimport { logout } from '../components/logout';\n\n// Import the functions used from functions.js\nimport { handleEditReview, handleCancelClick, handleNewRating, handleNewReview, handleSubmitNewData, handleDeleteReview } from './functions';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction EditReviews() {\n  _s();\n  // Used to navigate around the web app\n  const navigate = useNavigate();\n\n  // Holds the users current reviews for all events\n  const [curReviews, setCurReviews] = useState([]);\n\n  // Holds the updated rate/review\n  const [newRating, setNewRating] = useState(null);\n  const [newReview, setNewReview] = useState('');\n\n  // Gets the commentId that the user is Editting \n  const [editId, setEditId] = useState(null);\n\n  // Getting the userId so we can retrieve the correct events\n  const userId = sessionStorage.getItem('id');\n\n  // Getting the information from the backend for all reviews\n  // that belong to the eventId we are reviewing\n  useEffect(() => {\n    Axios.get(`http://localhost:3001/mainPage/editReviews?userId=${userId}`).then(response => {\n      setCurReviews(response.data);\n    }).catch(error => {\n      console.log(error);\n    });\n  }, [userId, editId]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"mainContainer\",\n    children: [\"STUDENT EVENT REVIEW PAGE\", /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"taskBar\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: logout,\n        children: \"Logout\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => navigate('/mainPage'),\n        children: \"Student Home\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"tableWrapper\",\n      children: /*#__PURE__*/_jsxDEV(\"table\", {\n        className: \"contentTable\",\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Rating\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 70,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Review\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 71,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Actions\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 72,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: curReviews.map(review => /*#__PURE__*/_jsxDEV(Fragment, {\n            children: editId === review.commentId ? /*#__PURE__*/_jsxDEV(EditTableRow, {\n              review: review,\n              handleCancelClick: () => handleCancelClick(setEditId, setNewRating, setNewReview),\n              handleNewRating: event => handleNewRating(event, setNewRating),\n              handleNewReview: event => handleNewReview(event, setNewReview),\n              handleSubmitNewData: event => handleSubmitNewData(event, editId, userId, newRating, newReview, setEditId),\n              handleDeleteReview: event => handleDeleteReview(event, editId, setEditId)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 79,\n              columnNumber: 37\n            }, this) : /*#__PURE__*/_jsxDEV(ReadOnlyRow, {\n              review: review,\n              handleEditReview: event => handleEditReview(event, review, setEditId)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 90,\n              columnNumber: 41\n            }, this)\n          }, review.commentId, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 29\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 9\n  }, this);\n}\n_s(EditReviews, \"mSmdJAd6TNYL6nLpDoLjWxE+KKA=\", false, function () {\n  return [useNavigate];\n});\n_c = EditReviews;\nexport default EditReviews;\nvar _c;\n$RefreshReg$(_c, \"EditReviews\");","map":{"version":3,"names":["React","Fragment","useEffect","useState","useNavigate","Axios","ReadOnlyRow","EditTableRow","logout","handleEditReview","handleCancelClick","handleNewRating","handleNewReview","handleSubmitNewData","handleDeleteReview","jsxDEV","_jsxDEV","EditReviews","_s","navigate","curReviews","setCurReviews","newRating","setNewRating","newReview","setNewReview","editId","setEditId","userId","sessionStorage","getItem","get","then","response","data","catch","error","console","log","className","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","map","review","commentId","event","_c","$RefreshReg$"],"sources":["C:/Users/vince/OneDrive/Desktop/project/client/src/editReviewButton/editReviews.jsx"],"sourcesContent":["/* eslint-disable no-unused-vars */\r\nimport React, { Fragment, useEffect, useState } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport Axios from 'axios';\r\n\r\n// Import styles\r\nimport './editReview.css';\r\n\r\n// Import components\r\nimport ReadOnlyRow from './components/readOnlyRow';\r\nimport EditTableRow from './components/editTableRows';\r\n\r\n// Logout feature\r\nimport { logout } from '../components/logout'\r\n\r\n// Import the functions used from functions.js\r\nimport {\r\n    handleEditReview, \r\n    handleCancelClick,\r\n    handleNewRating,\r\n    handleNewReview,\r\n    handleSubmitNewData,\r\n    handleDeleteReview,\r\n} from './functions';\r\n\r\nfunction EditReviews()\r\n{\r\n    // Used to navigate around the web app\r\n    const navigate = useNavigate();\r\n\r\n    // Holds the users current reviews for all events\r\n    const [curReviews, setCurReviews] = useState([]);\r\n\r\n    // Holds the updated rate/review\r\n    const [newRating, setNewRating] = useState(null);\r\n    const [newReview, setNewReview] = useState('');\r\n\r\n    // Gets the commentId that the user is Editting \r\n    const [editId, setEditId] = useState(null);\r\n\r\n    // Getting the userId so we can retrieve the correct events\r\n    const userId = sessionStorage.getItem('id');\r\n\r\n    // Getting the information from the backend for all reviews\r\n    // that belong to the eventId we are reviewing\r\n    useEffect(() => \r\n    {\r\n        Axios.get(`http://localhost:3001/mainPage/editReviews?userId=${userId}`)\r\n            .then((response) =>\r\n            {\r\n                setCurReviews(response.data);\r\n            })\r\n            .catch((error) =>\r\n            {\r\n                console.log(error);\r\n            });\r\n    }, [userId, editId]);\r\n\r\n    return (\r\n        <div className='mainContainer'>\r\n            STUDENT EVENT REVIEW PAGE\r\n            <div className='taskBar'>\r\n                <button onClick={logout}>Logout</button>\r\n                <button onClick={() => navigate('/mainPage')}>Student Home</button>\r\n            </div>\r\n            <div className='tableWrapper'>\r\n                <table className='contentTable'>\r\n                    <thead>\r\n                        <tr>\r\n                            <th>Rating</th>\r\n                            <th>Review</th>\r\n                            <th>Actions</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {curReviews.map((review) => (\r\n                            <Fragment key={ review.commentId }>\r\n                                { editId === review.commentId ? (\r\n                                    <EditTableRow \r\n                                        review={ review }\r\n                                        handleCancelClick={ () => handleCancelClick(setEditId, setNewRating, setNewReview) }\r\n                                        handleNewRating={(event) => handleNewRating(event, setNewRating)}\r\n                                        handleNewReview={(event) => handleNewReview(event, setNewReview)}\r\n                                        handleSubmitNewData={(event) =>\r\n                                        handleSubmitNewData(event, editId, userId, newRating, newReview, setEditId)\r\n                                        }\r\n                                        handleDeleteReview={(event) => handleDeleteReview(event, editId, setEditId)}\r\n                                    /> \r\n                                    ) : (\r\n                                        <ReadOnlyRow review={review} handleEditReview={(event) => handleEditReview(event, review, setEditId)} />\r\n                                    )}\r\n                            </Fragment>\r\n                        ))}\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nexport default EditReviews;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}