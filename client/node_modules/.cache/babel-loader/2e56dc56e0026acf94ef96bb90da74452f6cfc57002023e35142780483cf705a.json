{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\danie\\\\OneDrive\\\\Desktop\\\\project\\\\client\\\\src\\\\pages\\\\login\\\\login.js\",\n  _s = $RefreshSig$();\n/* eslint-disable no-unused-vars */\nimport React, { useState, useEffect } from 'react';\nimport Axios from 'axios';\nimport { useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Login() {\n  _s();\n  // To navigate to the register page\n  const navigate = useNavigate();\n\n  // Info used in the authenticating of Login Attempt\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  // Checking if the account is logged in\n  const [loginStatus, setLoginStatus] = useState('');\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n\n  // COOKIES\n  // Something to do with cookies\n  Axios.defaults.withCredentials = true;\n  useEffect(() => {\n    Axios.get('http://localhost:3001/login').then(response => {\n      if (response.data.loggedIn === true) {\n        setLoginStatus(response.data.user[0].username);\n        console.log(`User ${response.data.user[0].username} is logged in as ${response.data.user[0].userType}.`);\n        setIsLoggedIn(true);\n      }\n    });\n  }, []);\n\n  // Navigate to the different userType Pages\n  const userTypeToPage = {\n    student: '/studentHome',\n    superadmin: '/superAdminHome',\n    admin: '/adminHome'\n  };\n\n  // Used to Check the Login info and if correct then redirects \n  // to the Event page to show the events \n  const login = () => {\n    Axios.post('http://localhost:3001/login', {\n      username: username,\n      password: password\n    }).then(response => {\n      if (response.data.message) {\n        setLoginStatus(response.data.message);\n      } else {\n        const user = response.data;\n        setLoginStatus(user.username);\n        setIsLoggedIn(true);\n\n        // Now check the userType and redirect accordingly\n        const userType = user.userType;\n        const nextPage = userTypeToPage[userType];\n        navigate(nextPage);\n        refresh();\n      }\n    });\n  };\n\n  // Refreshing the page\n  const refresh = () => window.location.reload(true);\n\n  // HTML FOR THE FILE\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    class: \"login-page\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      class: \"form\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"LOGIN\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        class: \"login-form\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Username\",\n          onChange: e => setUsername(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          placeholder: \"Password\",\n          onChange: e => setPassword(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: login,\n          children: \"Login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          class: \"message\",\n          children: [\"Not registered? \", /*#__PURE__*/_jsxDEV(\"a\", {\n            href: \"#\",\n            onClick: () => navigate('/registerStudent'),\n            children: \"Create an account\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 42\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 7\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 3\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 76,\n    columnNumber: 7\n  }, this);\n}\n_s(Login, \"rHKJDZNdhUqLJrorDh0u2OLLTs8=\", false, function () {\n  return [useNavigate];\n});\n_c = Login;\nexport default Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","useState","useEffect","Axios","useNavigate","jsxDEV","_jsxDEV","Login","_s","navigate","username","setUsername","password","setPassword","loginStatus","setLoginStatus","isLoggedIn","setIsLoggedIn","defaults","withCredentials","get","then","response","data","loggedIn","user","console","log","userType","userTypeToPage","student","superadmin","admin","login","post","message","nextPage","refresh","window","location","reload","class","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","onChange","e","target","value","onClick","href","_c","$RefreshReg$"],"sources":["C:/Users/danie/OneDrive/Desktop/project/client/src/pages/login/login.js"],"sourcesContent":["/* eslint-disable no-unused-vars */\r\nimport React, { useState, useEffect } from 'react';\r\nimport Axios from 'axios';\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\n\r\nfunction Login()\r\n{\r\n    // To navigate to the register page\r\n    const navigate = useNavigate();\r\n    \r\n    // Info used in the authenticating of Login Attempt\r\n    const [username, setUsername] = useState('');\r\n    const [password, setPassword] = useState('');\r\n    // Checking if the account is logged in\r\n    const [loginStatus, setLoginStatus] = useState('');\r\n    const [isLoggedIn, setIsLoggedIn] = useState(false);\r\n\r\n    // COOKIES\r\n    // Something to do with cookies\r\n    Axios.defaults.withCredentials = true;\r\n\r\n    useEffect(() => \r\n    {\r\n      Axios.get('http://localhost:3001/login').then((response) => \r\n      {\r\n        if (response.data.loggedIn === true)\r\n        {\r\n          setLoginStatus(response.data.user[0].username)\r\n          console.log(`User ${response.data.user[0].username} is logged in as ${response.data.user[0].userType}.`);\r\n          setIsLoggedIn(true);\r\n        }\r\n      });\r\n    }, []);\r\n\r\n    // Navigate to the different userType Pages\r\n    const userTypeToPage = {\r\n      student: '/studentHome',\r\n      superadmin: '/superAdminHome',\r\n      admin: '/adminHome'\r\n    };\r\n\r\n    // Used to Check the Login info and if correct then redirects \r\n    // to the Event page to show the events \r\n    const login = () => \r\n    {\r\n      Axios.post('http://localhost:3001/login', {\r\n        username: username,\r\n        password: password,\r\n        }).then((response) => \r\n        {\r\n          if (response.data.message)\r\n          {\r\n            setLoginStatus(response.data.message);\r\n          }\r\n          else\r\n          {\r\n            const user = response.data;\r\n            setLoginStatus(user.username);\r\n            setIsLoggedIn(true);\r\n\r\n            // Now check the userType and redirect accordingly\r\n            const userType = user.userType;\r\n            const nextPage = userTypeToPage[userType];\r\n            navigate(nextPage);\r\n            refresh();\r\n          }\r\n        });\r\n    };\r\n\r\n    // Refreshing the page\r\n    const refresh = () => window.location.reload(true);\r\n\r\n    // HTML FOR THE FILE\r\n    return (\r\n      <div class=\"login-page\">\r\n  <div class=\"form\">\r\n    <h2>LOGIN</h2>\r\n    <form class=\"login-form\">\r\n      <input type=\"text\" placeholder=\"Username\" onChange={(e) => setUsername(e.target.value)} />\r\n      <input type=\"password\" placeholder=\"Password\" onChange={(e) => setPassword(e.target.value)} />\r\n      <button onClick={ login }>Login</button>\r\n      <p class=\"message\">Not registered? <a href=\"#\" onClick={()=>navigate('/registerStudent')}>Create an account</a></p>\r\n    </form>\r\n  </div>\r\n</div>\r\n    );\r\n}\r\n\r\nexport default Login;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}