{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\vince\\\\OneDrive\\\\Desktop\\\\project\\\\client\\\\src\\\\home\\\\viewOptions.jsx\";\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction ViewOptions(_ref) {\n  let {\n    viewOption,\n    setViewOption,\n    setH2Tag\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"viewContainer\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"View Options\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 9,\n          columnNumber: 7\n        }, this), ['private', 'rso', 'public'].map(option => /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"radio\",\n            name: \"eventType\",\n            value: option,\n            checked: viewOption === option,\n            onChange: e => {\n              setViewOption(e.target.value);\n              setH2Tag(e.target.value);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 12,\n            columnNumber: 11\n          }, this), `${option.charAt(0).toUpperCase()}${option.slice(1)} Events`]\n        }, option, true, {\n          fileName: _jsxFileName,\n          lineNumber: 11,\n          columnNumber: 9\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 8,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 3\n    }, this)\n  }, void 0, false)\n  // <>\n  //     <form>\n  //         <div className=\"viewContainer\">\n  //             <h3>View Options</h3>\n  //             <label>\n  //                 <input type=\"radio\" name=\"eventType\"\n  //                     value=\"private\" checked={ viewOption === 'private' }\n  //                     onChange={(e) => \n  //                     {\n  //                         setViewOption(e.target.value);\n  //                         setH2Tag(e.target.value);\n  //                     }}/>\n  //                 Private Events\n  //             </label><br></br>\n  //             <label>\n  //                 <input type=\"radio\" name=\"eventType\"\n  //                     value=\"rso\" checked={ viewOption === 'rso' }\n  //                     onChange={(e) => \n  //                     {\n  //                         setViewOption(e.target.value);\n  //                         setH2Tag(e.target.value);\n  //                     }}/>\n  //                 RSO Events\n  //             </label><br></br>\n  //             <label>\n  //                 <input type=\"radio\" name=\"eventType\"\n  //                     value=\"public\" checked={ viewOption === 'public' }\n  //                     onChange={(e) => \n  //                     {\n  //                         setViewOption(e.target.value);\n  //                         setH2Tag(e.target.value);\n  //                     }}/>\n  //                 Public Events\n  //             </label><br></br>\n  //         </div>\n  //     </form>\n  // </>\n  ;\n}\n_c = ViewOptions;\nexport default ViewOptions;\n{/* <form>\r\n    <div className=\"viewContainer\">\r\n        <h3>View Options</h3>\r\n        <select name=\"eventType\" value={viewOption} onChange={(e) => {\r\n            setViewOption(e.target.value);\r\n            setH2Tag(e.target.value);\r\n        }}>\r\n            <option value=\"private\">Private Events</option>\r\n            <option value=\"rso\">RSO Events</option>\r\n            <option value=\"public\">Public Events</option>\r\n        </select>\r\n    </div>\r\n </form> */}\nvar _c;\n$RefreshReg$(_c, \"ViewOptions\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","Fragment","_Fragment","ViewOptions","_ref","viewOption","setViewOption","setH2Tag","children","className","fileName","_jsxFileName","lineNumber","columnNumber","map","option","type","name","value","checked","onChange","e","target","charAt","toUpperCase","slice","_c","$RefreshReg$"],"sources":["C:/Users/vince/OneDrive/Desktop/project/client/src/home/viewOptions.jsx"],"sourcesContent":["import React from 'react';\r\n\r\nfunction ViewOptions({ viewOption, setViewOption, setH2Tag })\r\n{\r\n    return(\r\n        <>\r\n  <form>\r\n    <div className=\"viewContainer\">\r\n      <h3>View Options</h3>\r\n      {['private', 'rso', 'public'].map(option => (\r\n        <label key={option}>\r\n          <input\r\n            type=\"radio\"\r\n            name=\"eventType\"\r\n            value={option}\r\n            checked={viewOption === option}\r\n            onChange={e => {\r\n              setViewOption(e.target.value);\r\n              setH2Tag(e.target.value);\r\n            }}\r\n          />\r\n          {`${option.charAt(0).toUpperCase()}${option.slice(1)} Events`}\r\n        </label>\r\n      ))}\r\n    </div>\r\n  </form>\r\n</>\r\n        // <>\r\n        //     <form>\r\n        //         <div className=\"viewContainer\">\r\n        //             <h3>View Options</h3>\r\n        //             <label>\r\n        //                 <input type=\"radio\" name=\"eventType\"\r\n        //                     value=\"private\" checked={ viewOption === 'private' }\r\n        //                     onChange={(e) => \r\n        //                     {\r\n        //                         setViewOption(e.target.value);\r\n        //                         setH2Tag(e.target.value);\r\n        //                     }}/>\r\n        //                 Private Events\r\n        //             </label><br></br>\r\n        //             <label>\r\n        //                 <input type=\"radio\" name=\"eventType\"\r\n        //                     value=\"rso\" checked={ viewOption === 'rso' }\r\n        //                     onChange={(e) => \r\n        //                     {\r\n        //                         setViewOption(e.target.value);\r\n        //                         setH2Tag(e.target.value);\r\n        //                     }}/>\r\n        //                 RSO Events\r\n        //             </label><br></br>\r\n        //             <label>\r\n        //                 <input type=\"radio\" name=\"eventType\"\r\n        //                     value=\"public\" checked={ viewOption === 'public' }\r\n        //                     onChange={(e) => \r\n        //                     {\r\n        //                         setViewOption(e.target.value);\r\n        //                         setH2Tag(e.target.value);\r\n        //                     }}/>\r\n        //                 Public Events\r\n        //             </label><br></br>\r\n        //         </div>\r\n        //     </form>\r\n        // </>\r\n \r\n    )\r\n}\r\n\r\nexport default ViewOptions;\r\n\r\n            {/* <form>\r\n                <div className=\"viewContainer\">\r\n                    <h3>View Options</h3>\r\n                    <select name=\"eventType\" value={viewOption} onChange={(e) => {\r\n                        setViewOption(e.target.value);\r\n                        setH2Tag(e.target.value);\r\n                    }}>\r\n                        <option value=\"private\">Private Events</option>\r\n                        <option value=\"rso\">RSO Events</option>\r\n                        <option value=\"public\">Public Events</option>\r\n                    </select>\r\n                </div>\r\n            </form> */}"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAE1B,SAASC,WAAWA,CAAAC,IAAA,EACpB;EAAA,IADqB;IAAEC,UAAU;IAAEC,aAAa;IAAEC;EAAS,CAAC,GAAAH,IAAA;EAExD,oBACIJ,OAAA,CAAAE,SAAA;IAAAM,QAAA,eACNR,OAAA;MAAAQ,QAAA,eACER,OAAA;QAAKS,SAAS,EAAC,eAAe;QAAAD,QAAA,gBAC5BR,OAAA;UAAAQ,QAAA,EAAI;QAAY;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QAAK,EACpB,CAAC,SAAS,EAAE,KAAK,EAAE,QAAQ,CAAC,CAACC,GAAG,CAACC,MAAM,iBACtCf,OAAA;UAAAQ,QAAA,gBACER,OAAA;YACEgB,IAAI,EAAC,OAAO;YACZC,IAAI,EAAC,WAAW;YAChBC,KAAK,EAAEH,MAAO;YACdI,OAAO,EAAEd,UAAU,KAAKU,MAAO;YAC/BK,QAAQ,EAAEC,CAAC,IAAI;cACbf,aAAa,CAACe,CAAC,CAACC,MAAM,CAACJ,KAAK,CAAC;cAC7BX,QAAQ,CAACc,CAAC,CAACC,MAAM,CAACJ,KAAK,CAAC;YAC1B;UAAE;YAAAR,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,QACF,EACA,GAAEE,MAAM,CAACQ,MAAM,CAAC,CAAC,CAAC,CAACC,WAAW,EAAG,GAAET,MAAM,CAACU,KAAK,CAAC,CAAC,CAAE,SAAQ;QAAA,GAXnDV,MAAM;UAAAL,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QAanB,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IACE;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EACD;EAED;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EAAA;AAGR;AAACa,EAAA,GAhEQvB,WAAW;AAkEpB,eAAeA,WAAW;AAEd,CAAC;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAZa;AAYU,IAAAuB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}