{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\danie\\\\OneDrive\\\\Desktop\\\\project\\\\client\\\\src\\\\pages\\\\login.js\",\n  _s = $RefreshSig$();\n/* eslint-disable no-unused-vars */\nimport React, { useState, useEffect } from 'react';\nimport Axios from 'axios';\nimport { useNavigate } from 'react-router-dom';\nimport './Login.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Login() {\n  _s();\n  // To navigate to the register page\n  const navigate = useNavigate();\n\n  // Info used in the authenticating of Login Attempt\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  // Checking if the account is logged in\n  const [loginStatus, setLoginStatus] = useState('');\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n\n  // COOKIES\n  // Something to do with cookies\n  Axios.defaults.withCredentials = true;\n  useEffect(() => {\n    Axios.get('http://localhost:3001/login').then(response => {\n      if (response.data.loggedIn === true) {\n        setLoginStatus(response.data.user[0].username);\n        console.log(`User ${response.data.user[0].username} is logged in.`);\n        setIsLoggedIn(true);\n      }\n    });\n  }, []);\n\n  // Used to Check the Login info and if correct then redirects \n  // to the Event page to show the events \n  const login = () => {\n    Axios.post('http://localhost:3001/login', {\n      username: username,\n      password: password\n    }).then(response => {\n      if (response.data.message) {\n        setLoginStatus(response.data.message);\n      } else {\n        setLoginStatus(response.data[0].username);\n        setIsLoggedIn(true);\n        navigate('/events');\n        refresh();\n      }\n    });\n  };\n\n  // Refreshing the page\n  const refresh = () => window.location.reload(true);\n\n  // HTML FOR THE FILE\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"login-container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"login\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"LOGIN\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Username:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          onChange: e => {\n            setUsername(e.target.value);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Password:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          onChange: e => {\n            setPassword(e.target.value);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"button-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => navigate('/register'),\n          children: \"Register Page\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: login,\n          children: \"Login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 11\n        }, this), isLoggedIn && 'User Logged in Rerouting']\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 7\n  }, this);\n}\n_s(Login, \"rHKJDZNdhUqLJrorDh0u2OLLTs8=\", false, function () {\n  return [useNavigate];\n});\n_c = Login;\n;\nexport default Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","useState","useEffect","Axios","useNavigate","jsxDEV","_jsxDEV","Login","_s","navigate","username","setUsername","password","setPassword","loginStatus","setLoginStatus","isLoggedIn","setIsLoggedIn","defaults","withCredentials","get","then","response","data","loggedIn","user","console","log","login","post","message","refresh","window","location","reload","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","onChange","e","target","value","onClick","_c","$RefreshReg$"],"sources":["C:/Users/danie/OneDrive/Desktop/project/client/src/pages/login.js"],"sourcesContent":["/* eslint-disable no-unused-vars */\r\nimport React, { useState, useEffect } from 'react';\r\nimport Axios from 'axios';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport './Login.css';\r\n\r\nfunction Login()\r\n{\r\n    // To navigate to the register page\r\n    const navigate = useNavigate();\r\n    \r\n    // Info used in the authenticating of Login Attempt\r\n    const [username, setUsername] = useState('');\r\n    const [password, setPassword] = useState('');\r\n    // Checking if the account is logged in\r\n    const [loginStatus, setLoginStatus] = useState('');\r\n    const [isLoggedIn, setIsLoggedIn] = useState(false);\r\n\r\n    // COOKIES\r\n    // Something to do with cookies\r\n    Axios.defaults.withCredentials = true;\r\n\r\n    useEffect(() => \r\n    {\r\n      Axios.get('http://localhost:3001/login').then((response) => \r\n      {\r\n        if (response.data.loggedIn === true)\r\n        {\r\n          setLoginStatus(response.data.user[0].username)\r\n          console.log(`User ${response.data.user[0].username} is logged in.`);\r\n          setIsLoggedIn(true);\r\n        }\r\n      });\r\n    }, []);\r\n\r\n    // Used to Check the Login info and if correct then redirects \r\n    // to the Event page to show the events \r\n    const login = () => \r\n    {\r\n      Axios.post('http://localhost:3001/login', {\r\n        username: username,\r\n        password: password,\r\n        }).then((response) => \r\n        {\r\n          if (response.data.message)\r\n          {\r\n            setLoginStatus(response.data.message);\r\n          }\r\n          else\r\n          {\r\n            setLoginStatus(response.data[0].username);\r\n            setIsLoggedIn(true);\r\n            navigate('/events');\r\n            refresh();\r\n          }\r\n        });\r\n    };\r\n\r\n    // Refreshing the page\r\n    const refresh = () => window.location.reload(true);\r\n\r\n    // HTML FOR THE FILE\r\n    return (\r\n      <div className='login-container'>\r\n        <div className='login'>\r\n          <h2>LOGIN</h2>\r\n          <div>\r\n            <label>Username:</label>\r\n            <input \r\n            type=\"text\"\r\n            onChange={(e) => \r\n            {\r\n              setUsername(e.target.value);\r\n            }}\r\n            />\r\n          </div>\r\n          <div>\r\n            <label>Password:</label>\r\n            <input \r\n            type=\"text\"\r\n            onChange={(e) => \r\n            {\r\n              setPassword(e.target.value);\r\n            }}\r\n            />\r\n          </div>\r\n          <div className = 'button-container'>\r\n          <button onClick={()=>navigate('/register')}>Register Page</button>\r\n          <button onClick={ login }>Login</button>\r\n          { isLoggedIn && 'User Logged in Rerouting'}\r\n        </div>\r\n        </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Login;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}