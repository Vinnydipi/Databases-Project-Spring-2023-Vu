{"ast":null,"code":"import Axios from 'axios';\nexport const handleLogin = () => {\n  Axios.post('http://localhost:3001/login', {\n    username: username,\n    password: password\n  }).then(response => {\n    if (response.data.message) {\n      setLoginStatus(response.data.message);\n    } else {\n      const user = response.data;\n      setLoginStatus(user.username);\n      setIsLoggedIn(true);\n\n      // Store the current user's username in session storage\n      // to access in other files\n      sessionStorage.setItem('curUser', user.username);\n      sessionStorage.setItem('userEmail', user.email);\n      sessionStorage.setItem('id', user.idNum);\n      sessionStorage.setItem('userType', user.userType);\n      // Getting the universityID\n      const domain = user.email.split('@')[1];\n      sessionStorage.setItem('universityId', getUniversityId(domain));\n      navigate('/mainPage');\n      refresh();\n    }\n  });\n};\n\n// Function to grab the email domain and set to the according number\nexport const getUniversityId = domain => {\n  if (domain === 'knights.ucf.edu') return 1;else if (domain === 'ufl.edu') return 2;else return 3;\n};\n\n// Refreshing the page\nexport const refresh = () => window.location.reload(true);","map":{"version":3,"names":["Axios","handleLogin","post","username","password","then","response","data","message","setLoginStatus","user","setIsLoggedIn","sessionStorage","setItem","email","idNum","userType","domain","split","getUniversityId","navigate","refresh","window","location","reload"],"sources":["C:/Users/vince/OneDrive/Desktop/project/client/src/pages/auth/login/loginFunc.js"],"sourcesContent":["import Axios from 'axios';\r\n\r\nexport const handleLogin = () => \r\n    {\r\n        Axios.post('http://localhost:3001/login', {\r\n        username: username,\r\n        password: password,\r\n        }).then((response) => \r\n        {\r\n          if (response.data.message)\r\n          {\r\n            setLoginStatus(response.data.message);\r\n          }\r\n          else\r\n          {\r\n            const user = response.data;\r\n            setLoginStatus(user.username);\r\n            setIsLoggedIn(true);\r\n\r\n            // Store the current user's username in session storage\r\n            // to access in other files\r\n            sessionStorage.setItem('curUser', user.username);\r\n            sessionStorage.setItem('userEmail', user.email);\r\n            sessionStorage.setItem('id', user.idNum);\r\n            sessionStorage.setItem('userType', user.userType);\r\n            // Getting the universityID\r\n            const domain = user.email.split('@')[1];\r\n            sessionStorage.setItem('universityId', getUniversityId(domain));\r\n\r\n            navigate('/mainPage');\r\n            refresh();\r\n          }\r\n        });\r\n    };\r\n\r\n// Function to grab the email domain and set to the according number\r\nexport const getUniversityId = (domain) =>\r\n{\r\n    if (domain === 'knights.ucf.edu')\r\n        return 1;\r\n    else if (domain === 'ufl.edu')\r\n        return 2;\r\n    else\r\n        return 3;\r\n}\r\n\r\n// Refreshing the page\r\nexport const refresh = () => window.location.reload(true);"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,OAAO,MAAMC,WAAW,GAAGA,CAAA,KACvB;EACID,KAAK,CAACE,IAAI,CAAC,6BAA6B,EAAE;IAC1CC,QAAQ,EAAEA,QAAQ;IAClBC,QAAQ,EAAEA;EACV,CAAC,CAAC,CAACC,IAAI,CAAEC,QAAQ,IACjB;IACE,IAAIA,QAAQ,CAACC,IAAI,CAACC,OAAO,EACzB;MACEC,cAAc,CAACH,QAAQ,CAACC,IAAI,CAACC,OAAO,CAAC;IACvC,CAAC,MAED;MACE,MAAME,IAAI,GAAGJ,QAAQ,CAACC,IAAI;MAC1BE,cAAc,CAACC,IAAI,CAACP,QAAQ,CAAC;MAC7BQ,aAAa,CAAC,IAAI,CAAC;;MAEnB;MACA;MACAC,cAAc,CAACC,OAAO,CAAC,SAAS,EAAEH,IAAI,CAACP,QAAQ,CAAC;MAChDS,cAAc,CAACC,OAAO,CAAC,WAAW,EAAEH,IAAI,CAACI,KAAK,CAAC;MAC/CF,cAAc,CAACC,OAAO,CAAC,IAAI,EAAEH,IAAI,CAACK,KAAK,CAAC;MACxCH,cAAc,CAACC,OAAO,CAAC,UAAU,EAAEH,IAAI,CAACM,QAAQ,CAAC;MACjD;MACA,MAAMC,MAAM,GAAGP,IAAI,CAACI,KAAK,CAACI,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;MACvCN,cAAc,CAACC,OAAO,CAAC,cAAc,EAAEM,eAAe,CAACF,MAAM,CAAC,CAAC;MAE/DG,QAAQ,CAAC,WAAW,CAAC;MACrBC,OAAO,EAAE;IACX;EACF,CAAC,CAAC;AACN,CAAC;;AAEL;AACA,OAAO,MAAMF,eAAe,GAAIF,MAAM,IACtC;EACI,IAAIA,MAAM,KAAK,iBAAiB,EAC5B,OAAO,CAAC,CAAC,KACR,IAAIA,MAAM,KAAK,SAAS,EACzB,OAAO,CAAC,CAAC,KAET,OAAO,CAAC;AAChB,CAAC;;AAED;AACA,OAAO,MAAMI,OAAO,GAAGA,CAAA,KAAMC,MAAM,CAACC,QAAQ,CAACC,MAAM,CAAC,IAAI,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}