{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Vincent\\\\Desktop\\\\project\\\\client\\\\src\\\\pages\\\\home\\\\adminCreateEvent.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\n// import { useNavigate } from 'react-router-dom';\nimport Axios from 'axios';\n\n// Import components\nimport CreateEvent from './adminCreateComponents/createEvent';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction AdminCreateEvent() {\n  _s();\n  // Holds RSO lists that the admin can make an event for\n  const [rsoList, setRsoList] = useState([]);\n  // The current logged in User\n  const userId = sessionStorage.getItem('id');\n  // The information for the event that the admin is making\n  const [eventInfo, setEventInfo] = useState({\n    name: '',\n    category: '',\n    description: '',\n    time: null,\n    phone: null,\n    email: null,\n    isPrivate: null,\n    hostRso: '',\n    long: null,\n    lat: null\n  });\n  const handleSubmit = event => {\n    event.preventDefault();\n    const form = new FormData(event.target);\n    const eventData = {\n      name: formData.get('name'),\n      category: formData.get('category'),\n      description: formData.get('description'),\n      time: formData.get('time'),\n      phone: formData.get('phone'),\n      email: formData.get('email'),\n      isPrivate: formData.get('isPrivate'),\n      hostRso: formData.get('hostRso'),\n      long: formData.get('long'),\n      lat: formData.get('lat')\n    };\n    setEventInfo(updateEventInfo); // Updates the useState obj with the form info\n  };\n\n  useEffect(() => {\n    console.log(eventInfo);\n    // Make a call to the backend to get the data\n    Axios.get(`http://localhost:3001/mainPage/createEvent/getRso?userId=${userId}`).then(response => {\n      setRsoList(response.data);\n    }).catch(error => {\n      console.log(error);\n    });\n  }, [userId, eventInfo]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"mainContainer\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Creating New Event\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(CreateEvent, {\n      rsoList: rsoList,\n      handleSubmit: handleSubmit\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 9\n  }, this);\n}\n_s(AdminCreateEvent, \"EVg9YofCbRIfIRgRyB/lcwdSBus=\");\n_c = AdminCreateEvent;\nexport default AdminCreateEvent;\nvar _c;\n$RefreshReg$(_c, \"AdminCreateEvent\");","map":{"version":3,"names":["React","useEffect","useState","Axios","CreateEvent","jsxDEV","_jsxDEV","AdminCreateEvent","_s","rsoList","setRsoList","userId","sessionStorage","getItem","eventInfo","setEventInfo","name","category","description","time","phone","email","isPrivate","hostRso","long","lat","handleSubmit","event","preventDefault","form","FormData","target","eventData","formData","get","updateEventInfo","console","log","then","response","data","catch","error","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/Vincent/Desktop/project/client/src/pages/home/adminCreateEvent.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\n// import { useNavigate } from 'react-router-dom';\r\nimport Axios from 'axios';\r\n\r\n// Import components\r\nimport CreateEvent from './adminCreateComponents/createEvent';\r\n\r\nfunction AdminCreateEvent()\r\n{\r\n    // Holds RSO lists that the admin can make an event for\r\n    const [rsoList, setRsoList] = useState([]);\r\n    // The current logged in User\r\n    const userId = sessionStorage.getItem('id'); \r\n    // The information for the event that the admin is making\r\n    const [eventInfo, setEventInfo] = useState({\r\n        name: '',\r\n        category: '',\r\n        description: '',\r\n        time: null,\r\n        phone: null,\r\n        email: null,\r\n        isPrivate: null,\r\n        hostRso: '',\r\n        long: null,\r\n        lat: null,\r\n      });\r\n\r\n    const handleSubmit = (event) =>\r\n    {\r\n        event.preventDefault();\r\n        const form = new FormData(event.target);\r\n\r\n        const eventData = {\r\n            name: formData.get('name'),\r\n            category: formData.get('category'),\r\n            description: formData.get('description'),\r\n            time: formData.get('time'),\r\n            phone: formData.get('phone'),\r\n            email: formData.get('email'),\r\n            isPrivate: formData.get('isPrivate'),\r\n            hostRso: formData.get('hostRso'),\r\n            long: formData.get('long'),\r\n            lat: formData.get('lat'),\r\n          };\r\n\r\n       \r\n        setEventInfo(updateEventInfo); // Updates the useState obj with the form info\r\n    };\r\n\r\n    useEffect(() =>\r\n    {\r\n        console.log(eventInfo);\r\n        // Make a call to the backend to get the data\r\n        Axios.get(`http://localhost:3001/mainPage/createEvent/getRso?userId=${userId}`)\r\n        .then(response =>\r\n            {\r\n                setRsoList(response.data);\r\n            })\r\n            .catch(error =>\r\n            {\r\n                console.log(error);\r\n            });\r\n    }, [userId, eventInfo]);\r\n\r\n    return(\r\n        <div className='mainContainer'>\r\n            <h1>Creating New Event</h1>\r\n            <CreateEvent rsoList={ rsoList } handleSubmit={ handleSubmit }/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AdminCreateEvent;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}